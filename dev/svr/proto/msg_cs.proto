// File:        msg_cs.proto
// Description: ---
// Notes:       ---
// Author:      leoxiang <leoxiang727@qq.com>
// Revision:    2015-06-09 by leoxiang

package msg;

////////////////////////////////////////////////////////////
// network headers
message TcpHead {
    optional int32  index               = 1;
    optional string client_ip           = 2;
    optional uint32 client_port         = 3;
    optional bool   is_new_connection   = 4;
    optional bool   is_close_connection = 5;
    optional uint32 connect_time        = 6;
}

enum ENPlatformType {
    PLATFORM_TYPE_WEB = 1;
    PLATFORM_TYPE_MOBILE = 2;
}

message CSHead {
    optional uint64         uid            = 1;
    optional uint64         client_version = 2;
    optional string         verify_sig     = 3;
    optional ENPlatformType platform       = 4;
}

////////////////////////////////////////////////////////////
// common data
enum ENCSError {
    CS_ERROR_OK = 0; // success
}

message CSNetAddress {
    optional string ip = 1;
    optional uint32 port = 2;
}

message CSTableInfo {

}

////////////////////////////////////////////////////////////
// roomsvr message
message CSQuickStartReq {

}

message CSQuickStartRsp {
    optional CSNetAddress address = 1;
    optional uint32 table_id = 2;
    optional uint32 seat_index = 3;
}

////////////////////////////////////////////////////////////
// gamesvr message
message CSEnterTableAndSitDownReq {
    optional uint32 table_id = 1;
    optional uint32 seat_index = 2;
}

message CSEnterTableAndSitDownRsp {
    optional ENCSError result = 1;
    optional CSTableInfo table_info = 2;
}

message CSEnterTableReq {
    optional uint32 table_id = 1;
}

message CSEnterTableRsp {
    optional ENCSError result = 1;
    optional CSTableInfo table_info = 2;
}

message CSSitDownReq {
    optional uint32 seat_index = 1;
}

message CSSitDownRsp {
    optional ENCSError result = 1;
}

message CSSetPlayerStatusReq {
    optional bool join_game_until_next_big_blind = 1;
}

message CSSetPlayerStatusRsp {
    optional ENCSError result = 1;
}

////////////////////////////////////////////////////////////
// client to server messages
message CS {
    // headers
    optional uint32  msg_id   = 1;
    optional CSHead  cs_head  = 2;
    optional TcpHead tcp_head = 3;

    // roomsvrd message
    optional CSQuickStartReq quick_start_req = 10;
    optional CSQuickStartRsp quick_start_rsp = 11;

    // gamesvrd message
    optional CSEnterTableAndSitDownReq enter_table_and_sitdown_req = 12;
    optional CSEnterTableAndSitDownRsp enter_table_and_sitdown_rsp = 13;
    optional CSEnterTableReq           enter_table_req             = 14;
    optional CSEnterTableRsp           enter_table_rsp             = 15;
    optional CSSitDownReq              sit_down_req                = 16;
    optional CSSitDownRsp              sit_down_rsp                = 17;
    optional CSSetPlayerStatusReq      set_player_status_req       = 18;
    optional CSSetPlayerStatusRsp      set_player_status_rsp       = 19;
}

// vim:ts=4:sw=4:et:ft=proto:
